CALL MPL_SCATTERV_PREAMB1(KCOMM,KROOT,KMP_TYPE,KREQUEST)
IRECVCOUNT=SIZE(PRECVBUF)

IF(IPL_MYRANK == IROOT) THEN
  IF( .NOT. LLPRESENT_SENDBUF) CALL MPL_MESSAGE(&
  & CDMESSAGE='MPL_SCATTERV:SENDBUF MISSING',CDSTRING=CDSTRING,&
  & LDABORT=LLABORT)
  ISENDBUFSIZE=SIZE(PSENDBUF)
  CALL MPL_SCATTERV_PREAMB2(KSENDCOUNTS,ISENDDISPL,KSENDDISPL,ISENDDISPL_PT,&
  & CDSTRING)
  IF(IMP_TYPE == JP_BLOCKING_STANDARD .OR. IMP_TYPE == JP_BLOCKING_BUFFERED) THEN
    CALL MPI_SCATTERV(PSENDBUF,KSENDCOUNTS,ISENDDISPL_PT,IDATA_TYPE, &
     & PRECVBUF,IRECVCOUNT,IDATA_TYPE,IROOT-1,ICOMM,IERROR)
  ELSEIF(IMP_TYPE == JP_NON_BLOCKING_STANDARD .OR. IMP_TYPE == JP_NON_BLOCKING_BUFFERED) THEN
    CALL MPI_ISCATTERV(PSENDBUF,KSENDCOUNTS,ISENDDISPL_PT,IDATA_TYPE, &
     & PRECVBUF,IRECVCOUNT,IDATA_TYPE,IROOT-1,ICOMM,IREQUEST_LOCAL,IERROR)
    KREQUEST=IREQUEST_LOCAL%MPI_VAL
    IF(.NOT. PRESENT(KSENDDISPL)) THEN
      CALL YDDISPLS_LIST%APPEND(KREQ=KREQUEST,NO_NEW_NODE=.TRUE.)
    ENDIF
  ENDIF
  IF(LMPLSTATS) THEN
    CALL MPL_SENDSTATS(SUM(KSENDCOUNTS),IDATA_TYPE%MPI_VAL)
    CALL MPL_RECVSTATS(IRECVCOUNT,IDATA_TYPE%MPI_VAL)
  ENDIF
ELSE
  IF(IMP_TYPE == JP_BLOCKING_STANDARD .OR. IMP_TYPE == JP_BLOCKING_BUFFERED) THEN
    CALL MPI_SCATTERV(ZDUM_INT,ONES,ONES,IDATA_TYPE, &
     & PRECVBUF,IRECVCOUNT,IDATA_TYPE,IROOT-1,ICOMM,IERROR)
  ELSEIF(IMP_TYPE == JP_NON_BLOCKING_STANDARD .OR. IMP_TYPE == JP_NON_BLOCKING_BUFFERED) THEN
    CALL MPI_ISCATTERV(ZDUM_INT,ONES,ONES,IDATA_TYPE, &
     & PRECVBUF,IRECVCOUNT,IDATA_TYPE,IROOT-1,ICOMM,IREQUEST_LOCAL,IERROR)
    KREQUEST=IREQUEST_LOCAL%MPI_VAL
  ENDIF
  IF(LMPLSTATS) THEN
    CALL MPL_RECVSTATS(IRECVCOUNT,IDATA_TYPE%MPI_VAL)
  ENDIF
ENDIF

IF(PRESENT(KERROR)) THEN
   KERROR=IERROR
ELSE
   IF (IERROR/=0) CALL MPL_MESSAGE(CDMESSAGE='MPL_SCATTERV',&
   & CDSTRING=CDSTRING,KERROR=IERROR,LDABORT=LLABORT)
ENDIF
